/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.actorFilm;

import java.sql.SQLIntegrityConstraintViolationException;
import controller.ActorMovieController;
import infra.ConnectionFactory;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ActorMovie;
import view.movie.MovieRegistrationScreen;
import view.movie.MovieQueryScreen;
import view.actor.ActorRegistrationScreen;
import view.actor.ActorQueryScreen;

public class ActorMovieAssociation extends javax.swing.JFrame {

    private JFrame previousScreen;
    private PreparedStatement ps = null;
    private Connection connection = null;
    private ResultSet rs = null;
    int actorId = 0;
    int movieId = 0;
    boolean success;

    /**
     * Creates new form MainScreen
     */
    public ActorMovieAssociation() {
        initComponents();
        showJboxElements();
        showListElements();
    }

    public ActorMovieAssociation(JFrame previousScreen) {
        initComponents();
        showJboxElements();
        showListElements();
        this.previousScreen = previousScreen;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListActor = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldMovieName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButtonConfirmAssociation = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonDelete = new javax.swing.JButton();
        jButtonQuery = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuRegister = new javax.swing.JMenu();
        jMenuActorRegister = new javax.swing.JMenuItem();
        jMenuMovieRegister = new javax.swing.JMenuItem();
        jMenuQuery = new javax.swing.JMenu();
        jMenuActorQuery = new javax.swing.JMenuItem();
        jMenuMovieQuery = new javax.swing.JMenuItem();
        jMenuExit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Actor Movie Association");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                closeWindow(evt);
            }
        });

        jScrollPane1.setViewportView(jListActor);

        jLabel1.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel1.setText("Select the movie:");

        jLabel2.setFont(new java.awt.Font("Cambria", 0, 24)); // NOI18N
        jLabel2.setText("Actor Movie Association");

        jLabel3.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel3.setText("Movie name:");

        jTextFieldMovieName.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        jLabel4.setText("Select the actors:");

        jButtonConfirmAssociation.setText("Confirm");
        jButtonConfirmAssociation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmAssociation(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Actor ID", "Actor Name", "Movie ID", "Movie Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jButtonDelete.setText("Delete");
        jButtonDelete.setEnabled(false);
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelete(evt);
            }
        });

        jButtonQuery.setText("Query");
        jButtonQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQuery(evt);
            }
        });

        jMenuRegister.setText("Register");

        jMenuActorRegister.setText("Actor");
        jMenuActorRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActorRegistration(evt);
            }
        });
        jMenuRegister.add(jMenuActorRegister);

        jMenuMovieRegister.setText("Movie");
        jMenuMovieRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMovieRegistration(evt);
            }
        });
        jMenuRegister.add(jMenuMovieRegister);

        jMenuBar1.add(jMenuRegister);

        jMenuQuery.setText("Query");

        jMenuActorQuery.setText("Actor");
        jMenuActorQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActorQuery(evt);
            }
        });
        jMenuQuery.add(jMenuActorQuery);

        jMenuMovieQuery.setText("Movie");
        jMenuMovieQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMovieQuery(evt);
            }
        });
        jMenuQuery.add(jMenuMovieQuery);

        jMenuBar1.add(jMenuQuery);

        jMenuExit.setText("Exit");
        jMenuExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit(evt);
            }
        });
        jMenuBar1.add(jMenuExit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addGap(56, 56, 56))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextFieldMovieName, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jButtonQuery)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButtonConfirmAssociation)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonDelete)
                                        .addGap(10, 10, 10)))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonConfirmAssociation)
                            .addComponent(jButtonDelete)
                            .addComponent(jButtonQuery)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextFieldMovieName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void openActorRegistration(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActorRegistration

        this.setVisible(false);
        ActorRegistrationScreen actorRegistrationScreen = new ActorRegistrationScreen(this);
        actorRegistrationScreen.setVisible(true);

    }//GEN-LAST:event_openActorRegistration

    private void openActorQuery(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActorQuery
        this.setVisible(false);
        ActorQueryScreen actorQueryScreen = new ActorQueryScreen(this);
        actorQueryScreen.setVisible(true);
    }//GEN-LAST:event_openActorQuery

    private void openMovieRegistration(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMovieRegistration
        this.setVisible(false);
        MovieRegistrationScreen movieRegistrationScreen = new MovieRegistrationScreen(this);
        movieRegistrationScreen.setVisible(true);
    }//GEN-LAST:event_openMovieRegistration

    private void exit(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit
        System.exit(0);
    }//GEN-LAST:event_exit

    private void openMovieQuery(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMovieQuery
        this.setVisible(false);
        MovieQueryScreen movieQueryScreen = new MovieQueryScreen(this);
        movieQueryScreen.setVisible(true);
    }//GEN-LAST:event_openMovieQuery

    private void closeWindow(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeWindow

        this.setVisible(false);
        previousScreen.setVisible(true);
    }//GEN-LAST:event_closeWindow


    private void jButtonConfirmAssociation(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmAssociation

        List<String> selectedValues = jListActor.getSelectedValuesList();
        String selectedMovie = jTextFieldMovieName.getText();

        try {

            String sql = "SELECT actor_id FROM actor WHERE name = ?";

            ps = connection.prepareStatement(sql);

            String sql2 = "SELECT movie_id FROM movie WHERE name = ?";
            ps = connection.prepareStatement(sql2);
            ps.setString(1, selectedMovie);
            ResultSet rs2 = ps.executeQuery();

            if (rs2.next()) {
                movieId = rs2.getInt("movie_id");
            }

            ActorMovieController actorMovieController = new ActorMovieController();

            for (String actorName : selectedValues) {
                ps = connection.prepareStatement(sql);
                ps.setString(1, actorName);
                ResultSet rs = ps.executeQuery();

                if (rs.next()) {
                    actorId = rs.getInt("actor_id");
                    success = actorMovieController.associateActorMovie(actorId, movieId);
                }
            }

            if (success) {
                JOptionPane.showMessageDialog(null, "OK");
            } else {
                JOptionPane.showMessageDialog(null, "FAIL");
            }

        } catch (Exception e) {
            System.out.println(e);
        }


    }//GEN-LAST:event_jButtonConfirmAssociation

    private void jButtonDelete(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelete

        boolean success;

        int actorId = (Integer) jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 0);
        int movieId = (Integer) jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 2);

        try {

            ActorMovieController actorMovieController = new ActorMovieController();

            int response = JOptionPane.showConfirmDialog(null, "Do you want to delete this association?", "Confirm", JOptionPane.YES_NO_OPTION);

            if (response == JOptionPane.YES_OPTION) {
                success = actorMovieController.deleteActorMovie(actorId, movieId);
                if (success) {
                    JOptionPane.showMessageDialog(null, "Actor successfully disassociated!");
                    query();
                } else {
                    JOptionPane.showMessageDialog(null, "Error when disassociating actor");

                }
            }

        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButtonDelete

    private void query() {
        DefaultTableModel defaultTableModel = (DefaultTableModel) jTable1.getModel();
        defaultTableModel.setNumRows(0);

        String movieName = jTextFieldMovieName.getText();

        jTable1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 1) {
                    jButtonDelete.setEnabled(true);
                } else {
                    jButtonDelete.setEnabled(false);
                }
            }
        });

        try {
            ActorMovieController actorMovieController = new ActorMovieController();
            ArrayList<ActorMovie> actorMovies = actorMovieController.listActorMovies(movieName);

            for (ActorMovie actorMovie : actorMovies) {
                defaultTableModel.addRow(new Object[]{
                    actorMovie.getActor().getId(),
                    actorMovie.getActor().getName(),
                    actorMovie.getMovie().getId(),
                    actorMovie.getMovie().getName()

                });
            }
        } catch (Exception e) {
        }
    }

    private void jButtonQuery(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQuery
        query();
    }//GEN-LAST:event_jButtonQuery

    private void showListElements() {
        String sql = "SELECT * FROM actor";

        try {
            DefaultListModel model = new DefaultListModel();

            connection = ConnectionFactory.getConnection();
            ps = connection.prepareStatement(sql);
            rs = ps.executeQuery();

            while (rs.next()) {
                String name = rs.getString("name");
                model.addElement(name);
            }
            jListActor.setModel(model);

        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    private void showJboxElements() {

        try {
            String sql = "SELECT * FROM movie";

            connection = ConnectionFactory.getConnection();
            ps = connection.prepareStatement(sql);
            rs = ps.executeQuery();

            while (rs.next()) {
                String name = rs.getString("name");
                jComboBox1.addItem(name);
            }

            ItemListener itemListener = (ItemEvent e) -> {
                jTextFieldMovieName.setText((String) jComboBox1.getSelectedItem());
            };

            jComboBox1.addItemListener(itemListener);
            itemListener.itemStateChanged(null);

        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ActorMovieAssociation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ActorMovieAssociation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ActorMovieAssociation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ActorMovieAssociation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ActorMovieAssociation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConfirmAssociation;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonQuery;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jListActor;
    private javax.swing.JMenuItem jMenuActorQuery;
    private javax.swing.JMenuItem jMenuActorRegister;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuExit;
    private javax.swing.JMenuItem jMenuMovieQuery;
    private javax.swing.JMenuItem jMenuMovieRegister;
    private javax.swing.JMenu jMenuQuery;
    private javax.swing.JMenu jMenuRegister;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldMovieName;
    // End of variables declaration//GEN-END:variables
}
